{"version":3,"sources":["Components/Contactfrom.js","App.js","reportWebVitals.js","index.js"],"names":["Contactfrom","name","value","useState","email","password","message","user","setUser","handleInputs","event","target","PostData","e","a","preventDefault","fetch","method","headers","body","JSON","stringify","alert","className","for","type","onChange","id","placeholder","class","rows","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAyKeA,EAtKK,WAClB,IAMIC,EAAMC,EANV,EAAwBC,mBAAS,CAC/BF,KAAM,GACNG,MAAO,GACPC,SAAU,GACVC,QAAS,KAJX,mBAAOC,EAAP,KAAaC,EAAb,KAOMC,EAAe,SAACC,GACpBT,EAAOS,EAAMC,OAAOV,KACpBC,EAAQQ,EAAMC,OAAOT,MAErBM,EAAQ,2BACHD,GADE,kBAEJN,EAAOC,MAIJU,EAAQ,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,sDACbD,EAAEE,iBACMd,EAAmCM,EAAnCN,KAAMG,EAA6BG,EAA7BH,MAAOC,EAAsBE,EAAtBF,SAAUC,EAAYC,EAAZD,QAC5BL,GAAQG,GAASC,GAAYC,EAChBU,MACR,qEACA,CACEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBpB,OACAG,QACAC,WACAC,gBAKFE,EAAQ,CACNP,KAAM,GACNG,MAAO,GACPC,SAAU,GACVC,QAAS,KAEXgB,MAAM,4BAKlBA,MAAM,2BA/BS,2CAAH,sDAuEhB,OACE,mCACE,qBAAKC,UAAU,sBAAf,SACE,iCACE,sBAAKA,UAAU,aAAf,UACE,uBAAOC,IAAI,eAAX,oBACA,uBACEC,KAAK,OACLxB,KAAK,OACLC,MAAOK,EAAKN,KACZyB,SAAUjB,EACVc,UAAU,eACVI,GAAG,wBACHC,YAAY,uBAGhB,sBAAKL,UAAU,aAAf,UACE,uBAAOC,IAAI,qBAAX,6BACA,uBACEC,KAAK,QACLxB,KAAK,QACLC,MAAOK,EAAKH,MACZsB,SAAUjB,EACVc,UAAU,eACVI,GAAG,qBACH,mBAAiB,YACjBC,YAAY,gBAEd,uBAAOD,GAAG,YAAYJ,UAAU,uBAAhC,+DAIF,sBAAKA,UAAU,aAAf,UACE,uBAAOC,IAAI,wBAAX,sBACA,uBACEC,KAAK,WACLxB,KAAK,WACLC,MAAOK,EAAKF,SACZqB,SAAUjB,EACVc,UAAU,eACVI,GAAG,wBACHC,YAAY,gBAIhB,sBAAKC,MAAM,aAAX,UACE,uBAAOL,IAAI,8BAAX,qBACA,0BACEK,MAAM,eACNF,GAAG,8BACH1B,KAAK,UACLC,MAAOK,EAAKD,QACZoB,SAAUjB,EACVmB,YAAY,oBACZE,KAAK,SAGT,sBAAKP,UAAU,aAAf,UACE,uBACEE,KAAK,WACLF,UAAU,oBACVI,GAAG,kBAEL,uBAAOJ,UAAU,mBAAmBC,IAAI,gBAAxC,6BAKF,wBAAQC,KAAK,SAASF,UAAU,kBAAkBQ,QAASnB,EAA3D,4BC/IKoB,MATf,WACE,OACE,mCAEE,cAAC,EAAD,OCASC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8ca1e673.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useState } from \"react\";\r\n\r\nconst Contactfrom = () => {\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n    message: \"\",\r\n  });\r\n  let name, value;\r\n  const handleInputs = (event) => {\r\n    name = event.target.name;\r\n    value = event.target.value;\r\n\r\n    setUser({\r\n      ...user,\r\n      [name]: value,\r\n    });\r\n  };\r\n  \r\n    const PostData = async (e) => {\r\n        e.preventDefault();\r\n        const { name, email, password, message } = user;\r\n        if(name && email && password && message){\r\n            const res = fetch(\r\n                \"https://reactfrom-d6fd4-default-rtdb.firebaseio.com/reactfrom.json\",\r\n                {\r\n                  method: \"POST\",\r\n                  headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                  },\r\n                  body: JSON.stringify({\r\n                    name,\r\n                    email,\r\n                    password,\r\n                    message,\r\n                  }),\r\n                }\r\n              );\r\n              if (res) {\r\n                  setUser({\r\n                    name: \"\",\r\n                    email: \"\",\r\n                    password: \"\",\r\n                    message: \"\",\r\n                  });\r\n                  alert(\"Data SucessFully Stored\");\r\n                }\r\n    \r\n      \r\n  }else{\r\n      alert(\"Plz Fill The  All Data \")\r\n  }\r\n};\r\n\r\n//  2nd Bar\r\n//   const PostData = async (e) => {\r\n//     e.preventDefault();\r\n//     const { name, email, password, message } = user;\r\n//     if(name && email && password && message){\r\n//         const res = fetch(\r\n//             \"https://reactfrom-d6fd4-default-rtdb.firebaseio.com/reactfrom.json\",\r\n//             {\r\n//               method: \"POST\",\r\n//               headers: {\r\n//                 \"Content-Type\": \"application/json\",\r\n//               },\r\n//               body: JSON.stringify({\r\n//                 name,\r\n//                 email,\r\n//                 password,\r\n//                 message,\r\n//               }),\r\n//             }\r\n//           );\r\n//           if (res) {\r\n//               setUser({\r\n//                 name:\"\",\r\n//                 email:\"\",\r\n//                 password:\"\",\r\n//                 message:\"\",\r\n//               });\r\n//               alert(\"Data SucessFully Stored\");\r\n//             }\r\n//     }else{\r\n//           alert(\"Plz Fill The Data\");\r\n//     }\r\n    \r\n\r\n//   };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container w-50 mt-5\">\r\n        <form>\r\n          <div className=\"form-group\">\r\n            <label for=\"exampleInput\">Name:-</label>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={user.name}\r\n              onChange={handleInputs}\r\n              className=\"form-control\"\r\n              id=\"exampleInputPassword1\"\r\n              placeholder=\"Enter Your Name\"\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"exampleInputEmail1\">Email address:-</label>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={user.email}\r\n              onChange={handleInputs}\r\n              className=\"form-control\"\r\n              id=\"exampleInputEmail1\"\r\n              aria-describedby=\"emailHelp\"\r\n              placeholder=\"Enter email\"\r\n            />\r\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n              We'll never share your email with anyone else.\r\n            </small>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label for=\"exampleInputPassword1\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={user.password}\r\n              onChange={handleInputs}\r\n              className=\"form-control\"\r\n              id=\"exampleInputPassword1\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </div>\r\n\r\n          <div class=\"form-group\">\r\n            <label for=\"exampleFormControlTextarea1\">Massage</label>\r\n            <textarea\r\n              class=\"form-control\"\r\n              id=\"exampleFormControlTextarea1\"\r\n              name=\"message\"\r\n              value={user.message}\r\n              onChange={handleInputs}\r\n              placeholder=\"Write Something..\"\r\n              rows=\"3\"\r\n            ></textarea>\r\n          </div>\r\n          <div className=\"form-check\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"form-check-input \"\r\n              id=\"exampleCheck1\"\r\n            />\r\n            <label className=\"form-check-label\" for=\"exampleCheck1\">\r\n              Check me out\r\n            </label>\r\n          </div>\r\n\r\n          <button type=\"submit\" className=\"btn btn-success\" onClick={PostData}>\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contactfrom;\r\n","\nimport './App.css';\nimport \"../node_modules/bootstrap/dist/css/bootstrap.min.css\";\nimport \"../node_modules/bootstrap/dist/js/bootstrap.bundle\";\nimport Contactfrom from './Components/Contactfrom';\n\n\n\nfunction App() {\n  return (\n    <>\n    \n      <Contactfrom/>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}